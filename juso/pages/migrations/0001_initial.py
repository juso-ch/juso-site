# Generated by Django 3.0.3 on 2020-02-15 19:01

import django.core.validators
import django.db.models.deletion
import feincms3.cleanse
import imagefield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="External",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(verbose_name="URL")),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "external",
            },
        ),
        migrations.CreateModel(
            name="HTML",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "html",
                    models.TextField(
                        help_text=
                        "The content will be inserted directly into the page. It is VERY important that the HTML snippet is well-formed!",
                        verbose_name="HTML",
                    ),
                ),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "HTML",
                "verbose_name_plural": "HTML",
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    imagefield.fields.ImageField(
                        height_field="height",
                        upload_to="images/%Y/%m",
                        verbose_name="image",
                        width_field="width",
                    ),
                ),
                (
                    "width",
                    models.PositiveIntegerField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="image width",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="image height",
                    ),
                ),
                (
                    "ppoi",
                    imagefield.fields.PPOIField(
                        default="0.5x0.5",
                        max_length=20,
                        verbose_name="primary point of interest",
                    ),
                ),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
                (
                    "caption",
                    models.CharField(blank=True,
                                     max_length=200,
                                     verbose_name="caption"),
                ),
            ],
            options={
                "verbose_name": "image",
                "verbose_name_plural": "images",
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True,
                                        verbose_name="is active"),
                ),
                ("title", models.CharField(max_length=200,
                                           verbose_name="title")),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "position",
                    models.PositiveIntegerField(
                        db_index=True,
                        editable=False,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=1,
                                message=
                                "Position is expected to be greater than zero.",
                            )
                        ],
                    ),
                ),
                (
                    "static_path",
                    models.BooleanField(default=False,
                                        verbose_name="static path"),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True,
                        help_text=
                        "Generated automatically if 'static path' is unset.",
                        max_length=1000,
                        validators=[
                            django.core.validators.RegexValidator(
                                message=
                                "Path must start and end with a slash (/).",
                                regex="^/(|.+/)$",
                            )
                        ],
                        verbose_name="path",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="Used for Open Graph and other meta tags.",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="Override the description for this page.",
                        verbose_name="description",
                    ),
                ),
                (
                    "meta_image",
                    imagefield.fields.ImageField(
                        blank=True,
                        height_field="meta_image_height",
                        help_text="Set the Open Graph image.",
                        upload_to="meta/%Y/%m",
                        verbose_name="image",
                        width_field="meta_image_width",
                    ),
                ),
                (
                    "meta_canonical",
                    models.URLField(
                        blank=True,
                        help_text="If you need this you probably know.",
                        verbose_name="canonical URL",
                    ),
                ),
                (
                    "meta_author",
                    models.CharField(
                        blank=True,
                        help_text="Override the author meta tag.",
                        max_length=200,
                        verbose_name="author",
                    ),
                ),
                (
                    "meta_robots",
                    models.CharField(
                        blank=True,
                        help_text="Override the robots meta tag.",
                        max_length=200,
                        verbose_name="robots",
                    ),
                ),
                (
                    "meta_image_width",
                    models.PositiveIntegerField(blank=True,
                                                editable=False,
                                                null=True),
                ),
                (
                    "meta_image_height",
                    models.PositiveIntegerField(blank=True,
                                                editable=False,
                                                null=True),
                ),
                (
                    "meta_image_ppoi",
                    imagefield.fields.PPOIField(default="0.5x0.5",
                                                max_length=20),
                ),
                (
                    "menu",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("main", "main navigation"),
                            ("footer", "footer navigation"),
                        ],
                        default="main",
                        max_length=20,
                        verbose_name="menu",
                    ),
                ),
                (
                    "template_key",
                    models.CharField(
                        choices=[
                            ("default", "Default"),
                            ("sidebar-right", "Sidebar-Right"),
                            ("sidebar-left", "Sidebar-Left"),
                            ("fullwidth", "Fullwidth"),
                        ],
                        default="default",
                        max_length=100,
                        verbose_name="template",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        choices=[("de", "German"), ("fr", "French"),
                                 ("it", "Italian")],
                        default="de",
                        max_length=10,
                        verbose_name="language",
                    ),
                ),
                (
                    "redirect_to_url",
                    models.CharField(blank=True,
                                     max_length=200,
                                     verbose_name="Redirect to URL"),
                ),
                (
                    "application",
                    models.CharField(
                        blank=True,
                        choices=[("blog", "blog")],
                        max_length=20,
                        verbose_name="application",
                    ),
                ),
                (
                    "app_instance_namespace",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=100,
                        verbose_name="app instance namespace",
                    ),
                ),
                (
                    "is_landing_page",
                    models.BooleanField(default=False,
                                        verbose_name="is landing page"),
                ),
            ],
            options={
                "verbose_name": "page",
                "verbose_name_plural": "page",
            },
        ),
        migrations.CreateModel(
            name="RichText",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text",
                 feincms3.cleanse.CleansedRichTextField(verbose_name="text")),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "rich text",
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "template_key",
                    models.CharField(
                        choices=[("teams/default.html", "default")],
                        default="teams/default.html",
                        max_length=100,
                    ),
                ),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pages_team_set",
                        to="pages.Page",
                    ),
                ),
            ],
            options={
                "verbose_name": "team",
                "verbose_name_plural": "teams",
                "abstract": False,
            },
        ),
    ]
